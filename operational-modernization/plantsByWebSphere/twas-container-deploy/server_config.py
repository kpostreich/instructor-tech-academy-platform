# wsadmin script generated by binaryAppScanner
# This configuration was migrated on 3/3/21 at 5:51:43 PM from the following location: /opt/IBM/WebSphere/AppServer/profiles/Dmgr01
# The binary scanner does not support the migration of all WebSphere traditional configuration elements. Check the binary scanner documentation for the list of supported configuration elements.

Cell=AdminConfig.getid('/Cell:' + AdminControl.getCell() + '/')
Node=AdminConfig.getid('/Cell:' + AdminControl.getCell() + '/Node:' + AdminControl.getNode() + '/')
Server=AdminConfig.getid('/Cell:' + AdminControl.getCell() + '/Node:' + AdminControl.getNode() + '/Server:server1')
NodeName=AdminControl.getNode()

# The following variables are used to replace sensitive data in the configuration for the application.
# The values for these variables were not collected because the includeSensitiveData option was not specified.
# ============================================================
RHEL73CellManager01_db2alias_password_1=''
RHEL73CellManager01_db2alias_user_1=''
# ============================================================

print 'Starting Creating JVM Properties'
# Properties are migrated from server RHEL73Node01/server1.
AdminTask.setJVMSystemProperties(["-propertyName", "openjpa.jdbc.DBDictionary", "-propertyValue", "db2"])

print 'Starting Creating Authentication Alias'
GlobalSecurityVar=AdminConfig.getid('/Cell:' + AdminControl.getCell() + '/' + 'Security:/')
AdminConfig.create('JAASAuthData', GlobalSecurityVar, [['userId', RHEL73CellManager01_db2alias_user_1], ['description', ''], ['password', RHEL73CellManager01_db2alias_password_1], ['alias', 'RHEL73CellManager01/db2alias']])

print 'Starting Creating Queues'

print 'Starting Creating Topics'

print 'Starting Creating Activation Specifications'

print 'Starting Creating Connection Factories'

print 'Starting Creating JDBC Providers'
AdminConfigVar_0=AdminConfig.create('JDBCProvider', Node, [['name', 'DB2_Universal_JDBC_Driver_Provider_(XA)'], ['implementationClassName', 'com.ibm.db2.jcc.DB2XADataSource'], ['providerType', 'DB2 Universal JDBC Driver Provider (XA)'], ['description', 'Two-phase commit DB2 JCC provider that supports JDBC 3.0. Data sources that use this provider support the use of XA to perform 2-phase commit processing. Use of driver type 2 on the application server for z/OS is not supported for data sources created under this provider.'], ['classpath', '/work/config/lib/db2jcc4.jar'], ['xa', 'true']])
AdminConfigVar_1=AdminTask.createDatasource(AdminConfigVar_0, ["-name", "DB2 Universal JDBC Driver XA DataSource", "-jndiName", "jdbc/PlantsByWebSphereDataSource", "-dataStoreHelperClassName", "com.ibm.websphere.rsadapter.DB2UniversalDataStoreHelper", "-componentManagedAuthenticationAlias", "RHEL73CellManager01/db2alias", "-xaRecoveryAuthAlias", "RHEL73CellManager01/db2alias", "-configureResourceProperties", "[[databaseName java.lang.String PBW] [driverType java.lang.Integer 4] [serverName java.lang.String RHEL73] [portNumber java.lang.Integer 50000] ]"])
AdminConfigVar_2=AdminConfig.showAttribute(AdminConfigVar_1, 'propertySet')
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'beginTranForResultSetScrollingAPIs'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'beginTranForVendorAPIs'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'connectionSharing'], ['type', 'java.lang.Integer'], ['value', '1']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'deferPrepares'], ['type', 'java.lang.Boolean'], ['value', 'true']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'enableClientInformation'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'enableMultithreadedAccessDetection'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'errorDetectionModel'], ['type', 'java.lang.String'], ['value', 'ExceptionMapping']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'fullyMaterializeLobData'], ['type', 'java.lang.Boolean'], ['value', 'true']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'loginTimeout'], ['type', 'java.lang.Integer'], ['value', '0']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'name'], ['type', 'java.lang.String'], ['value', 'DB2 Universal JDBC Driver XA DataSource']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'nonTransactionalDataSource'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'preTestSQLString'], ['type', 'java.lang.String'], ['value', 'SELECT CURRENT SQLID FROM SYSIBM.SYSDUMMY1']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'propagateClientIdentityUsingTrustedContext'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'readOnly'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'reauthentication'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'resultSetHoldability'], ['type', 'java.lang.Integer'], ['value', '2']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'retrieveMessagesFromServerOnGetMessage'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'traceFileAppend'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'traceLevel'], ['type', 'java.lang.Integer'], ['value', '-1']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'unbindClientRerouteListFromJndi'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'useTransactionRedirect'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'validateNewConnection'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'validateNewConnectionRetryCount'], ['type', 'java.lang.Integer'], ['value', '100']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_2, [['name', 'validateNewConnectionRetryInterval'], ['type', 'java.lang.Long'], ['value', '3']])
AdminConfigVar_3=AdminConfig.showAttribute(AdminConfigVar_1, 'connectionPool')
AdminConfig.modify(AdminConfigVar_3, [['stuckThreshold', '0'], ['reapTime', '180'], ['testConnectionInterval', '0'], ['connectionTimeout', '180'], ['surgeCreationInterval', '0'], ['surgeThreshold', '-1'], ['stuckTimerTime', '0'], ['numberOfFreePoolPartitions', '0'], ['minConnections', '0'], ['unusedTimeout', '1800'], ['agedTimeout', '0'], ['numberOfSharedPoolPartitions', '0'], ['purgePolicy', 'EntirePool'], ['maxConnections', '10'], ['freePoolDistributionTableSize', '0'], ['stuckTime', '0'], ['testConnection', 'false'], ['numberOfUnsharedPoolPartitions', '0']])
AdminConfigVar_4=AdminConfig.create('JDBCProvider', Node, [['name', 'DB2_Universal_JDBC_Driver_Provider'], ['implementationClassName', 'com.ibm.db2.jcc.DB2ConnectionPoolDataSource'], ['providerType', 'DB2 Universal JDBC Driver Provider'], ['description', 'One-phase commit DB2 JCC provider that supports JDBC 3.0. Data sources that use this provider support only 1-phase commit processing, unless you use driver type 2 with the application server for z/OS. If you use the application server for z/OS, driver type 2 uses RRS and supports 2-phase commit processing.'], ['classpath', '/work/config/lib/db2jcc4.jar'], ['xa', 'false']])
AdminConfigVar_5=AdminTask.createDatasource(AdminConfigVar_4, ["-name", "DB2 Universal JDBC Driver DataSource", "-jndiName", "jdbc/PlantsByWebSphereDataSourceNONJTA", "-dataStoreHelperClassName", "com.ibm.websphere.rsadapter.DB2UniversalDataStoreHelper", "-componentManagedAuthenticationAlias", "RHEL73CellManager01/db2alias", "-configureResourceProperties", "[[databaseName java.lang.String PBW] [driverType java.lang.Integer 4] [serverName java.lang.String RHEL73] [portNumber java.lang.Integer 50000] ]"])
AdminConfigVar_6=AdminConfig.showAttribute(AdminConfigVar_5, 'propertySet')
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'beginTranForResultSetScrollingAPIs'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'beginTranForVendorAPIs'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'connectionSharing'], ['type', 'java.lang.Integer'], ['value', '1']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'deferPrepares'], ['type', 'java.lang.Boolean'], ['value', 'true']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'enableClientInformation'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'enableMultithreadedAccessDetection'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'errorDetectionModel'], ['type', 'java.lang.String'], ['value', 'ExceptionMapping']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'fullyMaterializeLobData'], ['type', 'java.lang.Boolean'], ['value', 'true']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'jmsOnePhaseOptimization'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'loginTimeout'], ['type', 'java.lang.Integer'], ['value', '0']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'name'], ['type', 'java.lang.String'], ['value', 'DB2 Universal JDBC Driver DataSource']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'nonTransactionalDataSource'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'preTestSQLString'], ['type', 'java.lang.String'], ['value', 'SELECT CURRENT SQLID FROM SYSIBM.SYSDUMMY1']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'propagateClientIdentityUsingTrustedContext'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'readOnly'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'reauthentication'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'resultSetHoldability'], ['type', 'java.lang.Integer'], ['value', '2']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'retrieveMessagesFromServerOnGetMessage'], ['type', 'java.lang.Boolean'], ['value', 'true']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'traceFileAppend'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'traceLevel'], ['type', 'java.lang.Integer'], ['value', '-1']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'unbindClientRerouteListFromJndi'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'useTransactionRedirect'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'validateNewConnection'], ['type', 'java.lang.Boolean'], ['value', 'false']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'validateNewConnectionRetryCount'], ['type', 'java.lang.Integer'], ['value', '100']])
AdminConfig.create('J2EEResourceProperty', AdminConfigVar_6, [['name', 'validateNewConnectionRetryInterval'], ['type', 'java.lang.Long'], ['value', '3']])
AdminConfigVar_7=AdminConfig.showAttribute(AdminConfigVar_5, 'connectionPool')
AdminConfig.modify(AdminConfigVar_7, [['stuckThreshold', '0'], ['reapTime', '180'], ['testConnectionInterval', '0'], ['connectionTimeout', '180'], ['surgeCreationInterval', '0'], ['surgeThreshold', '-1'], ['stuckTimerTime', '0'], ['numberOfFreePoolPartitions', '0'], ['minConnections', '0'], ['unusedTimeout', '1800'], ['agedTimeout', '0'], ['numberOfSharedPoolPartitions', '0'], ['purgePolicy', 'EntirePool'], ['maxConnections', '10'], ['freePoolDistributionTableSize', '0'], ['stuckTime', '0'], ['testConnection', 'false'], ['numberOfUnsharedPoolPartitions', '0']])

print 'Starting Creating Variables'
AdminTask.setVariable(['-scope', 'Node=' + NodeName, '-variableName', 'DB2UNIVERSAL_JDBC_DRIVER_PATH', '-variableValue', '/home/db2inst1/sqllib/java'])
AdminTask.setVariable(['-scope', 'Node=' + NodeName, '-variableName', 'UNIVERSAL_JDBC_DRIVER_PATH', '-variableValue', '${WAS_INSTALL_ROOT}/universalDriver/lib'])

print 'Starting Saving Configuration Changes Before Application Deployment'
AdminConfig.save()
print 'Starting Application Deployment'
AdminConfig.create('Library', Server, [['name', 'globalSharedLibrary'], ['classPath',  '/work/config/lib']])
appServer = AdminConfig.list('ApplicationServer',Server)
classLoader1 = AdminConfig.create('Classloader', appServer, [['mode',  'PARENT_FIRST']])
AdminConfig.create('LibraryRef', classLoader1, [['libraryName', 'globalSharedLibrary']])
#AdminApp.install('/path/to/PlantsByWebSphereEE6.ear', ["-node", NodeName, "-server", "server1", "-appname", "PlantsByWebSphereEE6.ear"])
AdminConfig.save()
